/* 
* File:    p3_pm_event_tables.c
* CVS:     $Id: p3_pm_event_tables.h,v 1.2 2009/09/10 20:19:43 terpstra Exp $
* Author:  Dan Terpstra; refactored from p3_events.c by Joseph Thomas
*          terpstra@cs.utk.edu
* Mods:    <your name here>
*          <your email address>
*/

/* Note:  Intel MESI bits are programmatically defined for those events
	  that can support them. You can find those events in this file
	  by searching for HAS_MESI. Events containing all possible
	  combinations of these bits can be formed by appending the 
	  proper letters to the end of the event name, e.g. L2_LD_MESI
	  or L2_ST_MI. Some of these bit combinations are used in the 
	  preset tables. In these cases they are explicitly defined.
	  Others can be defined as needed. Otherwise the user can access
	  these native events using _papi_hwd_name_to_code() with the 
	  proper bit characters appended to the event name.
*/ 

/* This Pentium M enumeration table is used to define the location
   in the native event tables.  Each even has a unique name so as
   to not interfere with location of other events in other native
   tables.  The preset tables use these enumerations to lookup
   native events.
*/

enum {
   PNE_PM_DATA_MEM_REFS = 0x40000000,
   PNE_PM_DCU_LINES_IN,
   PNE_PM_DCU_M_LINES_IN,
   PNE_PM_DCU_M_LINES_OUT,
   PNE_PM_DCU_MISS_OUTSTANDING,
   PNE_PM_IFU_IFETCH,
   PNE_PM_IFU_IFETCH_MISS,
   PNE_PM_ITLB_MISS,
   PNE_PM_IFU_MEM_STALL,
   PNE_PM_ILD_STALL,

   PNE_PM_L2_IFETCH,
   PNE_PM_L2_LD,

   PNE_PM_L2_LD_HWD_PREFETCHED,
   PNE_PM_L2_LD_TOT,

   PNE_PM_L2_ST,
   PNE_PM_L2_LINES_IN,

   PNE_PM_L2_HWD_PREFETCHED_LINES_IN,
   PNE_PM_L2_TOT_LINES_IN,

   PNE_PM_L2_MOD_LINES_OUT,

   PNE_PM_L2_HWD_PREFETCHED_LINES_OUT,
   PNE_PM_L2_TOT_LINES_OUT,
   PNE_PM_L2_M_LINES_INM,

   PNE_PM_L2_M_LINES_OUTM,

   PNE_PM_L2_M_LINES_OUTM_HWD_PREFETCHED,
   PNE_PM_L2_M_LINES_OUTM_TOT,

   PNE_PM_L2_RQSTS,

   PNE_PM_L2_ADS,
   PNE_PM_L2_DBS_BUSY,
   PNE_PM_L2_DBS_BUSY_RD,
   PNE_PM_BUS_DRDY_CLOCKS_SELF,
   PNE_PM_BUS_DRDY_CLOCKS_ANY,
   PNE_PM_BUS_LOCK_CLOCKS_SELF,
   PNE_PM_BUS_LOCK_CLOCKS_ANY,
   PNE_PM_BUS_REQ_OUTSTANDING,
   PNE_PM_BUS_TRAN_BRD_SELF,
   PNE_PM_BUS_TRAN_BRD_ANY,
   PNE_PM_BUS_TRAN_RFO_SELF,
   PNE_PM_BUS_TRAN_RFO_ANY,
   PNE_PM_BUS_TRANS_WB_SELF,
   PNE_PM_BUS_TRANS_WB_ANY,
   PNE_PM_BUS_TRAN_IFETCH_SELF,
   PNE_PM_BUS_TRAN_IFETCH_ANY,
   PNE_PM_BUS_TRAN_INVAL_SELF,
   PNE_PM_BUS_TRAN_INVAL_ANY,
   PNE_PM_BUS_TRAN_PWR_SELF,
   PNE_PM_BUS_TRAN_PWR_ANY,
   PNE_PM_BUS_TRANS_P_SELF,
   PNE_PM_BUS_TRANS_P_ANY,
   PNE_PM_BUS_TRANS_IO_SELF,
   PNE_PM_BUS_TRANS_IO_ANY,
   PNE_PM_BUS_TRAN_DEF_SELF,
   PNE_PM_BUS_TRAN_DEF_ANY,
   PNE_PM_BUS_TRAN_BURST_SELF,
   PNE_PM_BUS_TRAN_BURST_ANY,
   PNE_PM_BUS_TRAN_ANY_SELF,
   PNE_PM_BUS_TRAN_ANY_ANY,
   PNE_PM_BUS_TRAN_MEM_SELF,
   PNE_PM_BUS_TRAN_MEM_ANY,
   PNE_PM_BUS_DATA_RCV,
   PNE_PM_BUS_BNR_DRV,
   PNE_PM_BUS_HIT_DRV,
   PNE_PM_BUS_HITM_DRV,
   PNE_PM_BUS_SNOOP_STALL,
   PNE_PM_FLOPS,
   PNE_PM_FP_COMP_OPS_EXE,
   PNE_PM_FP_ASSIST,
   PNE_PM_MUL,
   PNE_PM_DIV,
   PNE_PM_CYCLES_DIV_BUSY,
   PNE_PM_LD_BLOCKS,
   PNE_PM_SB_DRAINS,
   PNE_PM_MISALIGN_MEM_REF,
   PNE_PM_EMON_KNI_PREF_DISPATCHED_PREFETCH_NTA,
   PNE_PM_EMON_KNI_PREF_DISPATCHED_PREFETCH_T1,
   PNE_PM_EMON_KNI_PREF_DISPATCHED_PREFETCH_T2,
   PNE_PM_EMON_KNI_PREF_DISPATCHED_WEAKLY_ORDERED_STORES,
   PNE_PM_EMON_KNI_PREF_MISS_PREFETCH_NTA,
   PNE_PM_EMON_KNI_PREF_MISS_PREFETCH_T1,
   PNE_PM_EMON_KNI_PREF_MISS_PREFETCH_T2,
   PNE_PM_EMON_KNI_PREF_MISS_WEAKLY_ORDERED_STORES,
   PNE_PM_INST_RETIRED,
   PNE_PM_UOPS_RETIRED,
   PNE_PM_INST_DECODED,
   PNE_PM_EMON_SSE_SSE2_INST_RETIRED_PACKED_AND_SCALAR_SINGLE,
   PNE_PM_EMON_SSE_SSE2_INST_RETIRED_SCALAR_SINGLE,
   PNE_PM_EMON_SSE_SSE2_INST_RETIRED_PACKED_DOUBLE,
   PNE_PM_EMON_SSE_SSE2_INST_RETIRED_SCALAR_DOUBLE,
   PNE_PM_EMON_SSE_SSE2_COMP_INST_RETIRED_PACKED_SINGLE,
   PNE_PM_EMON_SSE_SSE2_COMP_INST_RETIRED_SCALAR_SINGLE,
   PNE_PM_EMON_SSE_SSE2_COMP_INST_RETIRED_PACKED_DOUBLE,
   PNE_PM_EMON_SSE_SSE2_COMP_INST_RETIRED_SCALAR_DOUBLE,
   PNE_PM_EMON_EST_TRANS,
   PNE_PM_EMON_EST_TRANS_FREQ,
   PNE_PM_EMON_THERMAL_TRIP,
   PNE_PM_EMON_SIMD_INSTR_RETIRED,
   PNE_PM_EMON_SYNCH_UOPS,
   PNE_PM_EMON_ESP_UOPS,
   PNE_PM_EMON_FUSED_UOPS_RET,
   PNE_PM_EMON_FUSED_UOPS_RET_LD_ONLY,
   PNE_PM_EMON_FUSED_UOPS_RET_STD_ONLY,
   PNE_PM_EMON_UNFUSION,
   PNE_PM_EMON_PREF_RQSTS_UP,
   PNE_PM_EMON_PREF_RQSTS_DN,
   PNE_PM_HW_INT_RX,
   PNE_PM_CYCLES_INT_MASKED,
   PNE_PM_CYCLES_INT_PENDING_AND_MASKED,
   PNE_PM_BR_INST_EXEC,
   PNE_PM_BR_MISSP_EXEC,
   PNE_PM_BR_BAC_MISSP_EXEC,
   PNE_PM_BR_CND_EXEC,
   PNE_PM_BR_CND_MISSP_EXEC,
   PNE_PM_BR_IND_EXEC,
   PNE_PM_BR_IND_MISSP_EXEC,
   PNE_PM_BR_RET_EXEC,
   PNE_PM_BR_RET_MISSP_EXEC,
   PNE_PM_BR_RET_BAC_MISSP_EXEC,
   PNE_PM_BR_CALL_EXEC,
   PNE_PM_BR_CALL_MISSP_EXEC,
   PNE_PM_BR_IND_CALL_EXEC,
   PNE_PM_BR_INST_RETIRED,
   PNE_PM_BR_MISS_PRED_RETIRED,
   PNE_PM_BR_TAKEN_RETIRED,
   PNE_PM_BR_MISS_PRED_TAKEN_RET,
   PNE_PM_BR_INST_DECODED,
   PNE_PM_BTB_MISSES,
   PNE_PM_BR_BOGUS,
   PNE_PM_BACLEARS,
   PNE_PM_RESOURCE_STALLS,
   PNE_PM_PARTIAL_RAT_STALLS,
   PNE_PM_SEGMENT_REG_LOADS,
   PNE_PM_CPU_CLK_UNHALTED,
   PNE_PM_MMX_SAT_INSTR_EXEC,
   PNE_PM_MMX_UOPS_EXEC,
   PNE_PM_MMX_INSTR_TYPE_EXEC_MUL,
   PNE_PM_MMX_INSTR_TYPE_EXEC_SHIFT,
   PNE_PM_MMX_INSTR_TYPE_EXEC_PACK_OPS,
   PNE_PM_MMX_INSTR_TYPE_EXEC_UNPACK_OPS,
   PNE_PM_MMX_INSTR_TYPE_EXEC_LOGICAL,
   PNE_PM_MMX_INSTR_TYPE_EXEC_ARITHMETIC,
   PNE_PM_FP_MMX_TRANS_MMX_TO_FP,
   PNE_PM_FP_MMX_TRANS_FP_TO_MMX,
   PNE_PM_MMX_ASSIST,
   PNE_PM_SEG_RENAME_STALLS_ES,
   PNE_PM_SEG_RENAME_STALLS_DS,
   PNE_PM_SEG_RENAME_STALLS_FS,
   PNE_PM_SEG_RENAME_STALLS_GS,
   PNE_PM_SEG_RENAME_STALLS_TOT,
   PNE_PM_SEG_REG_RENAMES_ES,
   PNE_PM_SEG_REG_RENAMES_DS,
   PNE_PM_SEG_REG_RENAMES_FS,
   PNE_PM_SEG_REG_RENAMES_GS,
   PNE_PM_SEG_REG_RENAMES_TOT,
   PNE_PM_RET_SEG_RENAMES,
   PNE_PM_LAST_NATIVE_EVENT
};
/* These are special Pentium M events with MESI bits set as used in the preset table */
#define PNE_PM_L2_IFETCH_MESI (PNE_PM_L2_IFETCH | MOESI_M_INTEL | MOESI_E | MOESI_S | MOESI_I)
#define PNE_PM_L2_LD_MESI     (PNE_PM_L2_LD | MOESI_M_INTEL | MOESI_E | MOESI_S | MOESI_I)
#define PNE_PM_L2_ST_MESI     (PNE_PM_L2_ST | MOESI_M_INTEL | MOESI_E | MOESI_S | MOESI_I)
#define PNE_PM_L2_RQSTS_S     (PNE_PM_L2_RQSTS | MOESI_S)
#define PNE_PM_L2_RQSTS_MESI  (PNE_PM_L2_RQSTS | MOESI_M_INTEL | MOESI_E | MOESI_S | MOESI_I)


/* PAPI preset events are defined in the table below.
   Each entry consists of a PAPI name, derived info, and one or two
   native event indices as defined above.
*/

const hwi_search_t _papi_hwd_pm_preset_map[] = {
   {PAPI_L1_DCM,{0,{PNE_PM_DCU_LINES_IN,PAPI_NULL,PAPI_NULL,PAPI_NULL},{0,}}},
   {PAPI_L1_ICM,{0,{PNE_PM_L2_IFETCH_MESI,PAPI_NULL,PAPI_NULL,PAPI_NULL},{0,}}},
   {PAPI_L2_DCM,{DERIVED_SUB,{PNE_PM_L2_TOT_LINES_IN,PNE_PM_BUS_TRAN_IFETCH_SELF,PAPI_NULL,PAPI_NULL},{0,}}},
   {PAPI_L2_ICM, {0, {PNE_PM_BUS_TRAN_IFETCH_SELF, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L1_TCM, {0, {PNE_PM_L2_RQSTS_MESI, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L2_TCM, {0, {PNE_PM_L2_TOT_LINES_IN, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_CA_SHR, {0, {PNE_PM_L2_RQSTS_S, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_CA_CLN, {0, {PNE_PM_BUS_TRAN_RFO_SELF, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
/*   { PAPI_CA_INV, {0, {PNE_PM_BUS_HITM_DRV,PAPI_NULL,PAPI_NULL,PAPI_NULL},{0,}}},   */
   {PAPI_CA_ITV, {0, {PNE_PM_BUS_TRAN_INVAL_SELF, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_TLB_IM, {0, {PNE_PM_ITLB_MISS, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L1_LDM, {0, {PNE_PM_L2_LD_MESI, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L1_STM, {0, {PNE_PM_L2_ST_MESI, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L2_LDM, {DERIVED_SUB, {PNE_PM_L2_TOT_LINES_IN, PNE_PM_L2_M_LINES_INM, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L2_STM, {0, {PNE_PM_L2_M_LINES_INM, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_BTAC_M, {0, {PNE_PM_BTB_MISSES, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_HW_INT, {0, {PNE_PM_HW_INT_RX, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_BR_CN, {0, {PNE_PM_BR_INST_RETIRED, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_BR_TKN, {0, {PNE_PM_BR_TAKEN_RETIRED, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_BR_NTK,
    {DERIVED_SUB, {PNE_PM_BR_INST_RETIRED, PNE_PM_BR_TAKEN_RETIRED, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_BR_MSP, {0, {PNE_PM_BR_MISS_PRED_RETIRED, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_BR_PRC,
    {DERIVED_SUB, {PNE_PM_BR_INST_RETIRED, PNE_PM_BR_MISS_PRED_RETIRED, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_TOT_IIS, {0, {PNE_PM_INST_DECODED, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_TOT_INS, {0, {PNE_PM_INST_RETIRED, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_FP_INS, {0, {PNE_PM_FLOPS, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_FP_OPS, {0, {PNE_PM_FLOPS, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_BR_INS, {0, {PNE_PM_BR_INST_RETIRED, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
/*   { PAPI_VEC_INS,       {0, {PNE_PM_MMX_INSTR_EXEC,PAPI_NULL,PAPI_NULL,PAPI_NULL},{0,}}},  Says event exists on P2 only  */
   {PAPI_RES_STL, {0, {PNE_PM_RESOURCE_STALLS, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_TOT_CYC, {0, {PNE_PM_CPU_CLK_UNHALTED, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L1_DCH, {DERIVED_SUB, {PNE_PM_DATA_MEM_REFS, PNE_PM_DCU_LINES_IN, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L1_DCA, {0, {PNE_PM_DATA_MEM_REFS, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L2_DCA, {DERIVED_ADD, {PNE_PM_L2_LD_MESI, PNE_PM_L2_ST_MESI, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L2_DCR, {0, {PNE_PM_L2_LD_MESI, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L2_DCW, {0, {PNE_PM_L2_ST_MESI, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L1_ICH, {DERIVED_SUB, {PNE_PM_IFU_IFETCH, PNE_PM_L2_IFETCH_MESI, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L2_ICH,
    {DERIVED_SUB, {PNE_PM_L2_IFETCH_MESI, PNE_PM_BUS_TRAN_IFETCH_SELF, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L1_ICA, {0, {PNE_PM_IFU_IFETCH, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L2_ICA, {0, {PNE_PM_L2_IFETCH_MESI, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L1_ICR, {0, {PNE_PM_IFU_IFETCH, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L2_ICR, {0, {PNE_PM_L2_IFETCH_MESI, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L2_TCH, {DERIVED_SUB, {PNE_PM_L2_RQSTS_MESI, PNE_PM_L2_TOT_LINES_IN, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L1_TCA, {DERIVED_ADD, {PNE_PM_DATA_MEM_REFS, PNE_PM_IFU_IFETCH, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L2_TCA, {0, {PNE_PM_L2_RQSTS_MESI, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L2_TCR, {DERIVED_ADD, {PNE_PM_L2_LD_MESI, PNE_PM_L2_IFETCH_MESI, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_L2_TCW, {0, {PNE_PM_L2_ST_MESI, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_FML_INS, {0, {PNE_PM_MUL, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {PAPI_FDV_INS, {0, {PNE_PM_DIV, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}},
   {0, {0, {PAPI_NULL, PAPI_NULL, PAPI_NULL, PAPI_NULL}, {0,}}}
};


/* The following is the Intel Pentium M native table.
   It contains the following:
   A short text description of the native event,
   A longer more descriptive text of the native event,
   Information on which counter the native can live,
   and the Native Event Code.
   In some cases, event codes can be programmatically expanded to
   include MESI bits. These are identified by the addition
   of a HAS_MESI flag in the selector field.
*/

/* The notes/descriptions of these events have sometimes been truncated */
/* Please see the architecture's manual for any clarifications.         */


const int _papi_hwd_pm_native_count = (PNE_PM_LAST_NATIVE_EVENT & PAPI_NATIVE_AND_MASK);
const native_event_entry_t _papi_hwd_pm_native_map[] = {
   {"DATA_MEM_REFS",
    "All loads/stores from/to any memory type",
    {CNTRS12, 0x43}},
   {"DCU_LINES_IN",
    "Total lines allocated in the DCU",
    {CNTRS12, 0x45}},
   {"DCU_M_LINES_IN",
    "Number of M state lines allocated in the DCU",
    {CNTRS12, 0x46}},
   {"DCU_M_LINES_OUT",
    "Number of M state lines evicted from the DCU",
    {CNTRS12, 0x47}},
   {"DCU_MISS_OUTSTANDING",
    "Weighted no. of cycles while a DCU miss is outstanding, incremented by the no. of outstanding cache misses at any particular time",
    {CNTRS12, 0x48}},
   {"IFU_IFETCH",
    "Number of instruction fetches, both cacheable and noncacheable, including UC fetches",
    {CNTRS12, 0x80}},
   {"IFU_IFETCH_MISS",
    "Number of instruction fetch misses including UC accesses",
    {CNTRS12, 0x81}},
   {"ITLB_MISS",
    "Number of ITLB misses",
    {CNTRS12, 0x85}},
   {"IFU_MEM_STALL",
    "Number of cycles instruction fetch is stalled, for any reason, including IFU cache misses, ITLB misses, ITLB faults, and other minor stalls",
    {CNTRS12, 0x86}},
   {"ILD_STALL",
    "Number of cycles the instruction length decoder is stalled",
    {CNTRS12, 0x87}},

   {"L2_IFETCH",
    "Number of fetches from a modified line of L2 instruction cache",
    {CNTRS12 | HAS_MESI, 0x28}},
   {"L2_LD",
    "Number of loads from a line of the L2 data cache",
    {CNTRS12 | HAS_MESI, 0x29}},

   {"L2_LD_HWD_PREFETCHED",
    "Number of loads from an hardware-prefetched line of the L2 data cache",
    {CNTRS12, 0x1029}},
   {"L2_LD_TOT",
    "Total number of L2 data loads",
    {CNTRS12, 0x2029}},

   {"L2_ST",
    "Number of stores to a line of the L2 data cache",
    {CNTRS12 | HAS_MESI, 0x2a}},
   {"L2_LINES_IN",
    "Number of lines allocated in the L2 cache",
    {CNTRS12 | HAS_MESI, 0x24}},

   {"L2_HWD_PREFETCHED_LINES_IN",
    "Number of hardware-prefetched lines allocated in the L2 cache",
    {CNTRS12, 0x1024}},
   {"L2_TOT_LINES_IN",
    "Total number of lines allocated in the L2",
    {CNTRS12, 0x2024}},

   {"L2_LINES_OUT",
    "Number of lines evicted from the L2 cache",
    {CNTRS12 | HAS_MESI, 0x26}},

   {"L2_HWD_PREFETCHED_LINES_OUT",
    "Number of hardware-prefetched lines evicted from the L2 cache",
    {CNTRS12, 0x1026}},
   {"L2_TOT_LINES_OUT",
    "Total number of lines evicted from the L2",
    {CNTRS12, 0x2026}},
   {"L2_M_LINES_INM",
    "Number of modified lines allocated in the L2",
    {CNTRS12, 0x25}},

   {"L2_M_LINES_OUT",
    "Number of M-state lines evicted from the L2 cache",
    {CNTRS12 | HAS_MESI, 0x27}},

   {"L2_HWD_PREFETCHED_M_LINES_OUT",
    "Number of hardware-prefetched M-state lines evicted from the L2 cache",
    {CNTRS12, 0x1027}},
   {"L2_TOT_M_LINES_OUT",
    "Total number of M-state lines evicted from the L2 cache",
    {CNTRS12, 0x2027}},

   {"L2_RQSTS",
    "Total number of L2 requests to a line",
    {CNTRS12 | HAS_MESI, 0x2e}},

   {"L2_ADS",
    "Number of L2 address strobes",
    {CNTRS12, 0x21}},
   {"L2_DBS_BUSY",
    "Number of cycles the L2 cache data bus was busy",
    {CNTRS12, 0x22}},
   {"L2_DBS_BUSY_RD",
    "Number of cycles the data bus was busy transferring read data from the L2 to the processor",
    {CNTRS12, 0x23}},
   {"BUS_DRDY_CLOCKS_SELF",
    "Number of clock cycles during which the processor is driving DRDY#",
    {CNTRS12, 0x62}},
   {"BUS_DRDY_CLOCKS_ANY",
    "Number of clock cycles during which any agent is driving DRDY#",
    {CNTRS12, 0x2062}},
   {"BUS_LOCK_CLOCKS_SELF",
    "Number of clock cycles during which the processor is driving LOCK#",
    {CNTRS12, 0x63}},
   {"BUS_LOCK_CLOCKS_ANY",
    "Number of clock cycles during which any agent is driving LOCK#",
    {CNTRS12, 0x2063}},
   {"BUS_REQ_OUTSTANDING",
    "Number of bus outstanding bus requests",
    {CNTRS12, 0x60}},
   {"BUS_TRAN_BRD_SELF",
    "Number of burst read transactions by the processor",
    {CNTRS12, 0x65}},
   {"BUS_TRAN_BRD_ANY",
    "Number of burst read transactions by any agent",
    {CNTRS12, 0x2065}},
   {"BUS_TRAN_RFO_SELF",
    "Number of completed read for ownership transactions by the processor",
    {CNTRS12, 0x66}},
   {"BUS_TRAN_RFO_ANY",
    "Number of completed read for ownership transactions by any agent",
    {CNTRS12, 0x2066}},
   {"BUS_TRANS_WB_SELF",
    "Number of completed write back transactions by the processor",
    {CNTRS12, 0x67}},
   {"BUS_TRANS_WB_ANY",
    "Number of completed write back transactions by any agent",
    {CNTRS12, 0x2067}},
   {"BUS_TRAN_IFETCH_SELF",
    "Number of completed instruction fetch transactions by the processor",
    {CNTRS12, 0x68}},
   {"BUS_TRAN_IFETCH_ANY",
    "Number of completed instruction fetch transactions by any agent",
    {CNTRS12, 0x2068}},
   {"BUS_TRAN_INVAL_SELF",
    "Number of completed invalidate transactions by the processor",
    {CNTRS12, 0x69}},
   {"BUS_TRAN_INVAL_ANY",
    "Number of completed invalidate transactions by any agent",
    {CNTRS12, 0x2069}},
   {"BUS_TRAN_PWR_SELF",
    "Number of completed partial write transactions by the processor",
    {CNTRS12, 0x6a}},
   {"BUS_TRAN_PWR_ANY",
    "Number of completed partial write transactions by any agent",
    {CNTRS12, 0x206a}},
   {"BUS_TRANS_P_SELF",
    "Number of completed partial transactions by the processor",
    {CNTRS12, 0x6b}},
   {"BUS_TRANS_P_ANY",
    "Number of completed partial transactions by any agent",
    {CNTRS12, 0x206b}},
   {"BUS_TRANS_IO_SELF",
    "Number of completed I/O transactions by the processor",
    {CNTRS12, 0x6c}},
   {"BUS_TRANS_IO_ANY",
    "Number of completed I/O transactions by any agent",
    {CNTRS12, 0x206c}},
   {"BUS_TRAN_DEF_SELF",
    "Number of completed deferred transactions by the processor",
    {CNTRS12, 0x6d}},
   {"BUS_TRAN_DEF_ANY",
    "Number of completed deferred transactions by any agent",
    {CNTRS12, 0x206d}},
   {"BUS_TRAN_BURST_SELF",
    "Number of completed burst transactions by the processor",
    {CNTRS12, 0x6e}},
   {"BUS_TRAN_BURST_ANY",
    "Number of completed burst transactions by any agent",
    {CNTRS12, 0x206e}},
   {"BUS_TRAN_ANY_SELF",
    "Number of completed bus transactions by the processor",
    {CNTRS12, 0x70}},
   {"BUS_TRAN_ANY_ANY",
    "Number of completed bus transactions by any agent",
    {CNTRS12, 0x2070}},
   {"BUS_TRAN_MEM_SELF",
    "Number of completed memory transactions by the processor",
    {CNTRS12, 0x6f}},
   {"BUS_TRAN_MEM_ANY",
    "Number of completed memory transactions by any agent",
    {CNTRS12, 0x206f}},
   {"BUS_DATA_RCV",
    "Number of bus clock cycles during which this processor is receiving data",
    {CNTRS12, 0x64}},
   {"BUS_BNR_DRV",
    "Number of bus clock cycles during which this processor is driving the BNR# pin",
    {CNTRS12, 0x61}},
   {"BUS_HIT_DRV",
    "Number of bus clock cycles during which this processor is driving the HIT# pin",
    {CNTRS12, 0x7a}},
   {"BUS_HITM_DRV",
    "Number of bus clock cycles during which this processor is driving the HITM# pin",
    {CNTRS12, 0x7b}},
   {"BUS_SNOOP_STALL",
    "Number of clock cycles during which the bus is snoop stalled",
    {CNTRS12, 0x7e}},
   {"FLOPS",
    "Number of computational floating-point operations retired",
    {CNTR1, 0xc1}},
   {"FP_COMP_OPS_EXE",
    "Number of computational floating-point operations executed",
    {CNTR1, 0x10}},
   {"FP_ASSIST",
    "Number of floating-point exception cases handled by microcode",
    {CNTR2, 0x11}},
   {"MUL",
    "Number of integer and floating point multiplies",
    {CNTR2, 0x12}},
   {"DIV",
    "Number of integer and floating point divides",
    {CNTR2, 0x13}},
   {"CYCLES_DIV_BUSY",
    "Number of cycles during which the divider is busy and cannot accept new divides",
    {CNTR1, 0x14}},
   {"LD_BLOCKS",
    "Number of load operations delayed due to store buffer blocks",
    {CNTRS12, 0x3}},
   {"SB_DRAINS",
    "Number of store buffer drain cycles",
    {CNTRS12, 0x4}},
   {"MISALIGN_MEM_REF",
    "Number of misaligned data memory references",
    {CNTRS12, 0x5}},
   {"EMON_KNI_PREF_DISPATCHED_PREFETCHED_NTA",
    "Number of Streaming SIMD extensions prefetch NTA dispatched",
    {CNTRS12, 0x7}},
   {"EMON_KNI_PREF_DISPATCHED_PREFETCHED_T1",
    "Number of Streaming SIMD extensions prefetch T1 dispatched",
    {CNTRS12, 0x107}},
   {"EMON_KNI_PREF_DISPATCHED_PREFETCHED_T2",
    "Number of Streaming SIMD extensions prefetch T2 dispatched",
    {CNTRS12, 0x207}},
   {"EMON_KNI_PREF_DISPATCHED_WEAKLY_ORDERED_STORES",
    "Number of Streaming SIMD extensions prefetch weakly ordered stores dispatched",
    {CNTRS12, 0x307}},
   {"EMON_KNI_PREF_MISS_PREFETCHED_NTA",
    "Number of prefetch NTA instructions that miss all caches",
    {CNTRS12, 0x4b}},
   {"EMON_KNI_PREF_MISS_PREFETCHED_T1",
    "Number of prefetch T1instructions that miss all caches",
    {CNTRS12, 0x14b}},
   {"EMON_KNI_PREF_MISS_PREFETCHED_T2",
    "Number of prefetch T2 instructions that miss all caches",
    {CNTRS12, 0x24b}},
   {"EMON_KNI_PREF_MISS_WEAKLY_ORDERED_STORES",
    "Number of weakly-ordered instructions that miss all caches",
    {CNTRS12, 0x34b}},
   {"INST_RETIRED",
    "Number of instructions retired",
    {CNTRS12, 0xc0}},
   {"UOPS_RETIRED",
    "Number of uops retired",
    {CNTRS12, 0xc2}},
   {"INST_DECODED",
    "Number of instructions decoded",
    {CNTRS12, 0xd0}},
   {"EMON_SSE_SSE2_INST_RETIRED_PACKED_AND_SCALAR_SINGLE",
    "Number of SSE packed single and scalar single Streaming SIMD extensions retired",
    {CNTRS12, 0xd8}},
   {"EMON_SSE_SSE2_INST_RETIRED_SCALAR_SINGLE",
    "Number of SSE scalar single Streaming SIMD extensions retired",
    {CNTRS12, 0x1d8}},
   {"EMON_SSE_SSE2_INST_RETIRED_PACKED_DOUBLE",
    "Number of SSE2 packed-double Streaming SIMD extensions retired",
    {CNTRS12, 0x2d8}},
   {"EMON_SSE_SSE2_INST_RETIRED_SCALAR_DOUBLE",
    "Number of SSE2 scalar-double Streaming SIMD extensions retired",
    {CNTRS12, 0x3d8}},
   {"EMON_SSE_SSE2_COMP_INST_RETIRED_PACKED_SINGLE",
    "Number of SSE packed single computational instructions retired",
    {CNTRS12, 0xd9}},
   {"EMON_SSE_SSE2_COMP_INST_RETIRED_SCALAR_SINGLE",
    "Number of SSE scalar single computational instructions retired",
    {CNTRS12, 0x1d9}},
   {"EMON_SSE_SSE2_COMP_INST_RETIRED_PACKED_DOUBLE",
    "Number of SSE2 packed double computational instructions retired",
    {CNTRS12, 0x2d9}},
   {"EMON_SSE_SSE2_COMP_INST_RETIRED_SCALAR_DOUBLE",
    "Number of SSE2 scalar double computational instructions retired",
    {CNTRS12, 0x3d9}},
   {"EMON_EST_TRANS",
    "Total number of Enhanced Intel SpeedStep technology transitions",
    {CNTRS12, 0x58}},
   {"EMON_EST_TRANS_FREQ",
    "Number of Enhanced Intel SpeedStep technology frequency transitions",
    {CNTRS12, 0x258}},
   {"EMON_THERMAL_TRIP",
    "Duration-Occurrences in thermal trip; to count number of thermal trips: bit 22 in PerfEvtSel0:1 needs to be set to enable edge detect",
    {CNTRS12, 0x59}},
   {"EMON_SIMD_INSTR_RETIRED",
    "Number of retired MMX instructions",
    {CNTRS12, 0xce}},
   {"EMON_SYNCH_UOPS",
    "Number of sync micro-ops",
    {CNTRS12, 0xd3}},
   {"EMON_ESP_UOPS",
    "Total number of micro-ops",
    {CNTRS12, 0xd7}},
   {"EMON_FUSED_UOPS_RET",
    "Total number of retired fused micro-ops",
    {CNTRS12, 0xda}},
   {"EMON_FUSED_UOPS_RET_LD_ONLY",
    "Number of retired fused only-load + op micro-ops",
    {CNTRS12, 0x1da}},
   {"EMON_FUSED_UOPS_RET_STD_ONLY",
    "Number of retired fused only-std + sta micro-ops",
    {CNTRS12, 0x2da}},
   {"EMON_UNFUSION",
    "Number of unfusion events in the ROB, happened on a FP execution to a fused uOp",
    {CNTRS12, 0xdb}},
   {"EMON_PREF_RQSTS_UP",
    "Number of upward prefetches issued",
    {CNTRS12, 0xf0}},
   {"EMON_PREF_RQSTS_DN",
    "Number of downward prefetches issued",
    {CNTRS12, 0xf8}},
   {"HW_INT_RX",
    "Number of hardware interrupts received",
    {CNTRS12, 0xc8}},
   {"CYCLES_INT_MASKED",
    "Number of processor cycles to which interrupts are enabled",
    {CNTRS12, 0xc6}},
   {"CYCLES_INT_PENDING_AND_MASKED",
    "Number of processor cycles for which interrupts are disabled and interrupts are pending",
    {CNTRS12, 0xc7}},
   {"BR_INST_EXEC",
    "Number of branch instructions executed (not necissarily retired)",
    {CNTRS12, 0x88}},
   {"BR_MISSP_EXEC",
    "Number of branch instructions executed that were mispredicted at execution",
    {CNTRS12, 0x89}},
   {"BR_BAC_MISSP_EXEC",
    "Number of branch instructions executed that were mispredicted at Front End (BAC)",
    {CNTRS12, 0x8a}},
   {"BR_CND_EXEC",
    "Number of conditional branch instructions executed",
    {CNTRS12, 0x8b}},
   {"BR_CND_MISSP_EXEC",
    "Number of conditional branch instructions executed that were mispredicted",
    {CNTRS12, 0x8c}},
   {"BR_IND_EXEC",
    "Number of indirect branch instructions executed",
    {CNTRS12, 0x8d}},
   {"BR_IND_MISSP_EXEC",
    "Number of indirect branch instructions executed that were mispredicted",
    {CNTRS12, 0x8e}},
   {"BR_RET_EXEC",
    "Number of return branch instructions executed",
    {CNTRS12, 0x8f}},
   {"BR_RET_MISSP_EXEC",
    "Number of return branch instructions executed that were mispredicted at execution",
    {CNTRS12, 0x90}},
   {"BR_RET_BAC_MISSP_EXEC",
    "Number of return branch instructions executed that were mispredicted at Front End (BAC)",
    {CNTRS12, 0x91}},
   {"BR_CALL_EXEC",
    "Number of CALL instructions executed",
    {CNTRS12, 0x92}},
   {"BR_CALL_MISSP_EXEC",
    "Number of CALL instructions executed and mispredicted",
    {CNTRS12, 0x93}},
   {"BR_IND_CALL_EXEC",
    "Number of indirect CALL instructions executed",
    {CNTRS12, 0x94}},
   {"BR_INST_RETIRED",
    "Number of branch instructions retired",
    {CNTRS12, 0xc4}},
   {"BR_MISS_PRED_RETIRED",
    "Number of mispredicted branches retired",
    {CNTRS12, 0xc5}},
   {"BR_TAKEN_RETIRED",
    "Number of taken branches retired",
    {CNTRS12, 0xc9}},
   {"BR_MISS_PRED_TAKEN_RET",
    "Number of mispredictions branches retired",
    {CNTRS12, 0xca}},
   {"BR_INST_DECODED",
    "Number of branch instructions decoded",
    {CNTRS12, 0xe0}},
   {"BTB_MISSES",
    "Number of branches for which the BTB did not produce a prediction",
    {CNTRS12, 0xe2}},
   {"BR_BOGUS",
    "Number of bogus branches",
    {CNTRS12, 0xe4}},
   {"BACLEARS",
    "Number of times BACLEAR is asserted. This is the number of times that a static branch prediction was made, in which the branch decoder decided to make a branch prediction because the BTB did not",
    {CNTRS12, 0xe6}},
   {"RESOURCE_STALLS",
    "Incremented by 1 during every cycle for which there is a resource related stall",
    {CNTRS12, 0xa2}},
   {"PARTIAL_RAT_STALLS",
    "Number of cycles or events for partial stalls.  Includes flag partial stalls",
    {CNTRS12, 0xd2}},
   {"SEGMENT_REG_LOADS",
    "Number of segment register loads",
    {CNTRS12, 0x06}},
   {"CPU_CLK_UNHALTED",
    "Number of cycles during which the processor is not halted, and not in a thermal trip",
    {CNTRS12, 0x79}},
   {"MMX_SAT_INSTR_EXEC",
    "Number of MMX Saturating instructions executed",
    {CNTRS12, 0xb1}},
   {"MMX_UOPS_EXEC",
    "Number of MMX uops executed",
    {CNTRS12, 0xfb2}},
   {"MMX_INSTR_TYPE_EXEC_MUL",
    "Number of MMX packed multiply instructions executed",
    {CNTRS12, 0x1b3}},
   {"MMX_INSTR_TYPE_EXEC_SHIFT",
    "Number of MMX packed shift instructions executed",
    {CNTRS12, 0x2b3}},
   {"MMX_INSTR_TYPE_EXEC_PACK_OPS",
    "Number of MMX pack operation instructions executed",
    {CNTRS12, 0x4b3}},
   {"MMX_INSTR_TYPE_EXEC_UNPACK_OPS",
    "Number of MMX unpack operation instructions executed",
    {CNTRS12, 0x8b3}},
   {"MMX_INSTR_TYPE_EXEC_LOGICAL",
    "Number of MMX packed logical instructions executed",
    {CNTRS12, 0x10b3}},
   {"MMX_INSTR_TYPE_EXEC_ARITHMETIC",
    "Number of MMX packed arithmetic instructions executed",
    {CNTRS12, 0x20b3}},
   {"FP_MMX_TRANS_MMX_TO_FP",
    "Transitions from MMX instruction to floating-point instructions",
    {CNTRS12, 0xcc}},
   {"FP_MMX_TRANS_FP_TO_MMX",
    "Transitions from floating-point instructions to MMX instructions",
    {CNTRS12, 0x1cc}},
   {"MMX_ASSIST",
    "Number of MMX Assists, ie the number of EMMS instructions executed",
    {CNTRS12, 0xcd}},
   {"SEG_RENAME_STALLS_ES",
    "Number of Segment Register ES Renaming stalls",
    {CNTRS12, 0x1d4}},
   {"SEG_RENAME_STALLS_DS",
    "Number of Segment Register DS Renaming stalls",
    {CNTRS12, 0x2d4}},
   {"SEG_RENAME_STALLS_FS",
    "Number of Segment Register FS Renaming stalls",
    {CNTRS12, 0x4d4}},
   {"SEG_RENAME_STALLS_GS",
    "Number of Segment Register GS Renaming stalls",
    {CNTRS12, 0x8d4}},
   {"SEG_RENAME_STALLS_TOT",
    "Total Number of Segment Register Renaming stalls",
    {CNTRS12, 0xfd4}},
   {"SEG_REG_RENAMES_ES",
    "Number of Segment Register ES Renames",
    {CNTRS12, 0x1d5}},
   {"SEG_REG_RENAMES_DS",
    "Number of Segment Register DS Renames",
    {CNTRS12, 0x2d5}},
   {"SEG_REG_RENAMES_FS",
    "Number of Segment Register FS Renames",
    {CNTRS12, 0x4d5}},
   {"SEG_REG_RENAMES_GS",
    "Number of Segment Register GS Renames",
    {CNTRS12, 0x8d5}},
   {"SEG_REG_RENAMES_TOT",
    "Total number of Segment Register Renames",
    {CNTRS12, 0xfd5}},
   {"RET_SEG_RENAMES",
    "Number of segment register rename events retired",
    {CNTRS12, 0xd6}},
   {"", "", {0, 0}}
};

